{
  "hash": "e0c591733023e4fcc3fe785c13435768",
  "result": {
    "markdown": "---\ntitle: \"Challenge 6\"\nauthor: \"Dominik Haller\"\n---\n\n::: {.cell hash='Challenge6_cache/html/unnamed-chunk-1_26915e3c41708d45a76286d131fa9320'}\n\n```{.r .cell-code}\nlibrary(h2o)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> \n#> ----------------------------------------------------------------------\n#> \n#> Your next step is to start H2O:\n#>     > h2o.init()\n#> \n#> For H2O package documentation, ask for help:\n#>     > ??h2o\n#> \n#> After starting H2O, you can use the Web UI at http://localhost:54321\n#> For more information visit https://docs.h2o.ai\n#> \n#> ----------------------------------------------------------------------\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> \n#> Attache Paket: 'h2o'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Die folgenden Objekte sind maskiert von 'package:stats':\n#> \n#>     cor, sd, var\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Die folgenden Objekte sind maskiert von 'package:base':\n#> \n#>     %*%, %in%, &&, ||, apply, as.factor, as.numeric, colnames,\n#>     colnames<-, ifelse, is.character, is.factor, is.numeric, log,\n#>     log10, log1p, log2, round, signif, trunc\n```\n:::\n\n```{.r .cell-code}\nlibrary(recipes)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Lade nötiges Paket: dplyr\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> \n#> Attache Paket: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Die folgenden Objekte sind maskiert von 'package:stats':\n#> \n#>     filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Die folgenden Objekte sind maskiert von 'package:base':\n#> \n#>     intersect, setdiff, setequal, union\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> \n#> Attache Paket: 'recipes'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Das folgende Objekt ist maskiert 'package:stats':\n#> \n#>     step\n```\n:::\n\n```{.r .cell-code}\nlibrary(readxl)\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n#> ✔ forcats   1.0.0     ✔ readr     2.1.4\n#> ✔ ggplot2   3.4.2     ✔ stringr   1.5.0\n#> ✔ lubridate 1.9.2     ✔ tibble    3.2.1\n#> ✔ purrr     1.0.1     ✔ tidyr     1.3.0\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n#> ✖ lubridate::day()   masks h2o::day()\n#> ✖ dplyr::filter()    masks stats::filter()\n#> ✖ stringr::fixed()   masks recipes::fixed()\n#> ✖ lubridate::hour()  masks h2o::hour()\n#> ✖ dplyr::lag()       masks stats::lag()\n#> ✖ lubridate::month() masks h2o::month()\n#> ✖ lubridate::week()  masks h2o::week()\n#> ✖ lubridate::year()  masks h2o::year()\n#> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(tidyquant)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Lade nötiges Paket: PerformanceAnalytics\n#> Lade nötiges Paket: xts\n#> Lade nötiges Paket: zoo\n#> \n#> Attache Paket: 'zoo'\n#> \n#> Die folgenden Objekte sind maskiert von 'package:base':\n#> \n#>     as.Date, as.Date.numeric\n#> \n#> \n#> ######################### Warning from 'xts' package ##########################\n#> #                                                                             #\n#> # The dplyr lag() function breaks how base R's lag() function is supposed to  #\n#> # work, which breaks lag(my_xts). Calls to lag(my_xts) that you type or       #\n#> # source() into this session won't work correctly.                            #\n#> #                                                                             #\n#> # Use stats::lag() to make sure you're not using dplyr::lag(), or you can add #\n#> # conflictRules('dplyr', exclude = 'lag') to your .Rprofile to stop           #\n#> # dplyr from breaking base R's lag() function.                                #\n#> #                                                                             #\n#> # Code in packages is not affected. It's protected by R's namespace mechanism #\n#> # Set `options(xts.warn_dplyr_breaks_lag = FALSE)` to suppress this warning.  #\n#> #                                                                             #\n#> ###############################################################################\n#> \n#> Attache Paket: 'xts'\n#> \n#> Die folgenden Objekte sind maskiert von 'package:dplyr':\n#> \n#>     first, last\n#> \n#> \n#> Attache Paket: 'PerformanceAnalytics'\n#> \n#> Das folgende Objekt ist maskiert 'package:graphics':\n#> \n#>     legend\n#> \n#> Lade nötiges Paket: quantmod\n#> Lade nötiges Paket: TTR\n#> Registered S3 method overwritten by 'quantmod':\n#>   method            from\n#>   as.zoo.data.frame zoo\n```\n:::\n\n```{.r .cell-code}\nlibrary(lime)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> \n#> Attache Paket: 'lime'\n#> \n#> Das folgende Objekt ist maskiert 'package:dplyr':\n#> \n#>     explain\n```\n:::\n\n```{.r .cell-code}\nlibrary(rsample)\n\n# Load Data\nemployee_attrition_tbl <- read_csv(\"datasets-1067-1925-WA_Fn-UseC_-HR-Employee-Attrition.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Rows: 1470 Columns: 35\n#> ── Column specification ────────────────────────────────────────────────────────\n#> Delimiter: \",\"\n#> chr  (9): Attrition, BusinessTravel, Department, EducationField, Gender, Job...\n#> dbl (26): Age, DailyRate, DistanceFromHome, Education, EmployeeCount, Employ...\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\ndefinitions_raw_tbl    <- read_excel(\"data_definitions.xlsx\", sheet = 1, col_names = FALSE)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> New names:\n#> • `` -> `...1`\n#> • `` -> `...2`\n```\n:::\n\n```{.r .cell-code}\n# Processing Pipeline\nprocess_hr_data_readable <- function(data, definitions_tbl) {\n  \n  definitions_list <- definitions_tbl %>%\n    fill(...1, .direction = \"down\") %>%\n    filter(!is.na(...2)) %>%\n    separate(...2, into = c(\"key\", \"value\"), sep = \" '\", remove = TRUE) %>%\n    rename(column_name = ...1) %>%\n    mutate(key = as.numeric(key)) %>%\n    mutate(value = value %>% str_replace(pattern = \"'\", replacement = \"\")) %>%\n    split(.$column_name) %>%\n    map(~ select(., -column_name)) %>%\n    map(~ mutate(., value = as_factor(value))) \n  \n  for (i in seq_along(definitions_list)) {\n    list_name <- names(definitions_list)[i]\n    colnames(definitions_list[[i]]) <- c(list_name, paste0(list_name, \"_value\"))\n  }\n  \n  data_merged_tbl <- list(HR_Data = data) %>%\n    append(definitions_list, after = 1) %>%\n    reduce(left_join) %>%\n    select(-one_of(names(definitions_list))) %>%\n    set_names(str_replace_all(names(.), pattern = \"_value\", \n                              replacement = \"\")) %>%\n    select(sort(names(.))) %>%\n    mutate_if(is.character, as.factor) %>%\n    mutate(\n      BusinessTravel = BusinessTravel %>% fct_relevel(\"Non-Travel\", \n                                                      \"Travel_Rarely\", \n                                                      \"Travel_Frequently\"),\n      MaritalStatus  = MaritalStatus %>% fct_relevel(\"Single\", \n                                                     \"Married\", \n                                                     \"Divorced\")\n    )\n  \n  return(data_merged_tbl)\n  \n}\n\nemployee_attrition_readable_tbl <- process_hr_data_readable(employee_attrition_tbl, definitions_raw_tbl)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Joining with `by = join_by(Education)`\n#> Joining with `by = join_by(EnvironmentSatisfaction)`\n#> Joining with `by = join_by(JobInvolvement)`\n#> Joining with `by = join_by(JobSatisfaction)`\n#> Joining with `by = join_by(PerformanceRating)`\n#> Joining with `by = join_by(RelationshipSatisfaction)`\n#> Joining with `by = join_by(WorkLifeBalance)`\n```\n:::\n\n```{.r .cell-code}\n# Split into test and train\nset.seed(seed = 1113)\nsplit_obj <- rsample::initial_split(employee_attrition_readable_tbl, prop = 0.85)\n\n# Assign training and test data\ntrain_readable_tbl <- training(split_obj)\ntest_readable_tbl  <- testing(split_obj)\n\n# ML Preprocessing Recipe \nrecipe_obj <- recipe(Attrition ~ ., data = train_readable_tbl) %>%\n  step_zv(all_predictors()) %>%\n  step_mutate_at(c(\"JobLevel\", \"StockOptionLevel\"), fn = as.factor) %>% \n  prep()\n\nrecipe_obj\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> \n#> ── Recipe ──────────────────────────────────────────────────────────────────────\n#> \n#> ── Inputs \n#> Number of variables by role\n#> outcome:    1\n#> predictor: 34\n#> \n#> ── Training information \n#> Training data contained 1249 data points and no incomplete rows.\n#> \n#> ── Operations \n#> • Zero variance filter removed: EmployeeCount, Over18, StandardHours | Trained\n#> • Variable mutation for: JobLevel, StockOptionLevel | Trained\n```\n:::\n\n```{.r .cell-code}\ntrain_tbl <- bake(recipe_obj, new_data = train_readable_tbl)\ntest_tbl  <- bake(recipe_obj, new_data = test_readable_tbl)\n\n# 2. Models ----\n\nh2o.init()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#>  Connection successful!\n#> \n#> R is connected to the H2O cluster: \n#>     H2O cluster uptime:         1 hours 8 minutes \n#>     H2O cluster timezone:       Europe/Berlin \n#>     H2O data parsing timezone:  UTC \n#>     H2O cluster version:        3.40.0.1 \n#>     H2O cluster version age:    3 months and 7 days \n#>     H2O cluster name:           H2O_started_from_R_Domin_adl455 \n#>     H2O cluster total nodes:    1 \n#>     H2O cluster total memory:   2.99 GB \n#>     H2O cluster total cores:    8 \n#>     H2O cluster allowed cores:  8 \n#>     H2O cluster healthy:        TRUE \n#>     H2O Connection ip:          localhost \n#>     H2O Connection port:        54321 \n#>     H2O Connection proxy:       NA \n#>     H2O Internal Security:      FALSE \n#>     R Version:                  R version 4.2.3 (2023-03-15 ucrt)\n```\n:::\n\n```{.r .cell-code}\nautoml_leader <- h2o.loadModel(\"models/StackedEnsemble_AllModels_2_AutoML_1_20230515_213823\")\n\npredictions_tbl <- automl_leader %>% \n  h2o.predict(newdata = as.h2o(test_tbl)) %>%\n  as.tibble() %>%\n  bind_cols(\n    test_tbl %>%\n      select(Attrition, EmployeeNumber)\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: `as.tibble()` was deprecated in tibble 2.0.0.\n#> ℹ Please use `as_tibble()` instead.\n#> ℹ The signature and semantics have changed, see `?as_tibble`.\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n#> \n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |======================================================================| 100%\n#> \n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |======================================================================| 100%\n```\n:::\n\n```{.r .cell-code}\nexplainer <- train_tbl %>%\n  select(-Attrition) %>%\n  lime(\n    model           = automl_leader,\n    bin_continuous  = TRUE,\n    n_bins          = 4,\n    quantile_bins   = TRUE\n  )\n\n\nexplanation <- test_tbl %>%\n  slice(1) %>%\n  select(-Attrition) %>%\n  lime::explain(\n    \n    # Pass our explainer object\n    explainer = explainer,\n    # Because it is a binary classification model: 1\n    n_labels   = 1,\n    # number of features to be returned\n    n_features = 8,\n    # number of localized linear models\n    n_permutations = 5000,\n    # Let's start with 1\n    kernel_width   = 1\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> \n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |======================================================================| 100%\n#> \n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |======================================================================| 100%\n```\n:::\n\n```{.r .cell-code}\nexplanation %>%\n  as.tibble() \n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"model_type\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"case\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"label\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"label_prob\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"model_r2\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"model_intercept\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"model_prediction\"],\"name\":[7],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"feature\"],\"name\":[8],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"feature_value\"],\"name\":[9],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"feature_weight\"],\"name\":[10],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"feature_desc\"],\"name\":[11],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"data\"],\"name\":[12],\"type\":[\"list\"],\"align\":[\"right\"]},{\"label\":[\"prediction\"],\"name\":[13],\"type\":[\"list\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"classification\",\"2\":\"1\",\"3\":\"No\",\"4\":\"0.6853613\",\"5\":\"0.3120005\",\"6\":\"0.8705873\",\"7\":\"0.5793355\",\"8\":\"OverTime\",\"9\":\"2\",\"10\":\"-0.20802757\",\"11\":\"OverTime = Yes\",\"12\":\"<named list [31]>\",\"13\":\"<named list [2]>\"},{\"1\":\"classification\",\"2\":\"1\",\"3\":\"No\",\"4\":\"0.6853613\",\"5\":\"0.3120005\",\"6\":\"0.8705873\",\"7\":\"0.5793355\",\"8\":\"JobLevel\",\"9\":\"1\",\"10\":\"-0.09037491\",\"11\":\"JobLevel = 1\",\"12\":\"<named list [31]>\",\"13\":\"<named list [2]>\"},{\"1\":\"classification\",\"2\":\"1\",\"3\":\"No\",\"4\":\"0.6853613\",\"5\":\"0.3120005\",\"6\":\"0.8705873\",\"7\":\"0.5793355\",\"8\":\"YearsSinceLastPromotion\",\"9\":\"0\",\"10\":\"0.08038159\",\"11\":\"YearsSinceLastPromotion <= 1\",\"12\":\"<named list [31]>\",\"13\":\"<named list [2]>\"},{\"1\":\"classification\",\"2\":\"1\",\"3\":\"No\",\"4\":\"0.6853613\",\"5\":\"0.3120005\",\"6\":\"0.8705873\",\"7\":\"0.5793355\",\"8\":\"JobSatisfaction\",\"9\":\"1\",\"10\":\"-0.06311718\",\"11\":\"JobSatisfaction = Low\",\"12\":\"<named list [31]>\",\"13\":\"<named list [2]>\"},{\"1\":\"classification\",\"2\":\"1\",\"3\":\"No\",\"4\":\"0.6853613\",\"5\":\"0.3120005\",\"6\":\"0.8705873\",\"7\":\"0.5793355\",\"8\":\"RelationshipSatisfaction\",\"9\":\"1\",\"10\":\"-0.06305842\",\"11\":\"RelationshipSatisfaction = Low\",\"12\":\"<named list [31]>\",\"13\":\"<named list [2]>\"},{\"1\":\"classification\",\"2\":\"1\",\"3\":\"No\",\"4\":\"0.6853613\",\"5\":\"0.3120005\",\"6\":\"0.8705873\",\"7\":\"0.5793355\",\"8\":\"Department\",\"9\":\"2\",\"10\":\"0.05134442\",\"11\":\"Department = Research & Development\",\"12\":\"<named list [31]>\",\"13\":\"<named list [2]>\"},{\"1\":\"classification\",\"2\":\"1\",\"3\":\"No\",\"4\":\"0.6853613\",\"5\":\"0.3120005\",\"6\":\"0.8705873\",\"7\":\"0.5793355\",\"8\":\"JobInvolvement\",\"9\":\"4\",\"10\":\"0.04884983\",\"11\":\"JobInvolvement = Very High\",\"12\":\"<named list [31]>\",\"13\":\"<named list [2]>\"},{\"1\":\"classification\",\"2\":\"1\",\"3\":\"No\",\"4\":\"0.6853613\",\"5\":\"0.3120005\",\"6\":\"0.8705873\",\"7\":\"0.5793355\",\"8\":\"YearsWithCurrManager\",\"9\":\"0\",\"10\":\"-0.04724952\",\"11\":\"YearsWithCurrManager <= 2\",\"12\":\"<named list [31]>\",\"13\":\"<named list [2]>\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\ncase_1 <- explanation %>%\n  filter(case == 1)\n\ncase_1 %>% \n  ggplot(aes(feature_weight,feature_desc, fill = feature_weight > 0)) + \n  geom_col() +\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](Challenge6_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n\n```{.r .cell-code}\nexplanations <- test_tbl %>%\n  slice(1:20) %>%\n  select(-Attrition) %>%\n  lime::explain(\n    explainer = explainer,\n    n_labels   = 1,\n    n_features = 8,\n    n_permutations = 5000,\n    kernel_width   = 0.5\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> \n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |======================================================================| 100%\n#> \n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |======================================================================| 100%\n```\n:::\n\n```{.r .cell-code}\nexplanations %>%\n  as.tibble() %>% \n  ggplot(aes(case, feature_desc, fill = feature_weight)) + \n  geom_tile() +\n  facet_wrap(vars(label))\n```\n\n::: {.cell-output-display}\n![](Challenge6_files/figure-html/unnamed-chunk-1-2.png){width=672}\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}