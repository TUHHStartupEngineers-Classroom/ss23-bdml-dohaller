{
  "hash": "2c21d43912ec14ebebdb7ea52c63a417",
  "result": {
    "markdown": "---\ntitle: \"Challenge 1\"\nauthor: \"Dominik Haller\"\n---\n\n::: {.cell hash='01_tidyverse_cache/html/unnamed-chunk-1_7216ea75d33a45d74687a06256ddb330'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n#> ✔ dplyr     1.1.1     ✔ readr     2.1.4\n#> ✔ forcats   1.0.0     ✔ stringr   1.5.0\n#> ✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n#> ✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n#> ✔ purrr     1.0.1     \n#> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n#> ✖ dplyr::filter() masks stats::filter()\n#> ✖ dplyr::lag()    masks stats::lag()\n#> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(tidyquant)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Lade nötiges Paket: PerformanceAnalytics\n#> Lade nötiges Paket: xts\n#> Lade nötiges Paket: zoo\n#> \n#> Attache Paket: 'zoo'\n#> \n#> Die folgenden Objekte sind maskiert von 'package:base':\n#> \n#>     as.Date, as.Date.numeric\n#> \n#> \n#> ######################### Warning from 'xts' package ##########################\n#> #                                                                             #\n#> # The dplyr lag() function breaks how base R's lag() function is supposed to  #\n#> # work, which breaks lag(my_xts). Calls to lag(my_xts) that you type or       #\n#> # source() into this session won't work correctly.                            #\n#> #                                                                             #\n#> # Use stats::lag() to make sure you're not using dplyr::lag(), or you can add #\n#> # conflictRules('dplyr', exclude = 'lag') to your .Rprofile to stop           #\n#> # dplyr from breaking base R's lag() function.                                #\n#> #                                                                             #\n#> # Code in packages is not affected. It's protected by R's namespace mechanism #\n#> # Set `options(xts.warn_dplyr_breaks_lag = FALSE)` to suppress this warning.  #\n#> #                                                                             #\n#> ###############################################################################\n#> \n#> Attache Paket: 'xts'\n#> \n#> Die folgenden Objekte sind maskiert von 'package:dplyr':\n#> \n#>     first, last\n#> \n#> \n#> Attache Paket: 'PerformanceAnalytics'\n#> \n#> Das folgende Objekt ist maskiert 'package:graphics':\n#> \n#>     legend\n#> \n#> Lade nötiges Paket: quantmod\n#> Lade nötiges Paket: TTR\n#> Registered S3 method overwritten by 'quantmod':\n#>   method            from\n#>   as.zoo.data.frame zoo\n```\n:::\n\n```{.r .cell-code}\nlibrary(broom)\nlibrary(umap)\n\n# STOCK PRICES\nsp_500_prices_tbl <- read_rds(\"sp_500_prices_tbl.rds\")\n\n# SECTOR INFORMATION\nsp_500_index_tbl <- read_rds(\"sp_500_index_tbl.rds\")\n\n\n#Step 1\nsp_500_daily_returns_tbl <- sp_500_prices_tbl %>% \n  select(symbol, date, adjusted) %>% \n  filter(date >= '2018-01-01') %>% \n  group_by(symbol) %>% \n  mutate(lag = lag(adjusted)) %>% \n  na.omit %>% \n  mutate(pct_return = (adjusted - lag)/lag) %>% \n  select(symbol, date, pct_return)\n\n#Step 2\nstock_date_matrix_tbl <- sp_500_daily_returns_tbl %>% \n  spread(date, pct_return) %>% \n  replace(is.na(.),0) %>% \n  ungroup()\n\n#Step 3\nkmeans_obj <- stock_date_matrix_tbl %>% \n  within(rm(\"symbol\")) %>% \n  kmeans(centers = 4, nstart = 20)\n\n#Step 4\nkmeans_mapper <- function(center = 3) {\n  stock_date_matrix_tbl %>%\n    select(-symbol) %>%\n    kmeans(centers = center, nstart = 20)\n}\n\nk_means_mapped_tbl <- tibble(centers = 1:30) %>% \n  mutate(k_means = centers %>%  map(kmeans_mapper)) %>% \n  mutate(glance = k_means %>% map(glance))\n  \nk_means_mapped_tbl %>% \n  unnest(glance) %>% \n  select(centers, tot.withinss) %>% \n  # Visualization\n  ggplot(aes(centers, tot.withinss)) +\n  geom_point(color = \"#2DC6D6\", size = 4) +\n  geom_line(color = \"#2DC6D6\", size = 1) +\n  # Add labels (which are repelled a little)\n  ggrepel::geom_label_repel(aes(label = centers), color = \"#2DC6D6\") + \n  \n  # Formatting\n  labs(title = \"Skree Plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\n#> ℹ Please use `linewidth` instead.\n```\n:::\n\n::: {.cell-output-display}\n![](01_tidyverse_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#Step 5\numap_results <- stock_date_matrix_tbl %>% \n  select(-symbol) %>% \n  umap()\n\numap_results_tbl <- umap_results$layout %>% \n  as_tibble(.name_repair = \"unique\") %>% \n  set_names(c(\"x\", \"y\")) %>%\n  bind_cols(stock_date_matrix_tbl %>% select(symbol)) \n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> New names:\n#> • `` -> `...1`\n#> • `` -> `...2`\n```\n:::\n\n```{.r .cell-code}\numap_results_tbl %>% \n  ggplot(aes(x, y), ) +\n  geom_point(alpha = 0.5) + \n  theme_tq() + \n  ggrepel::geom_label_repel(aes(label = symbol), size = 3) + \n  labs(title = \"UMAP Projection\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: ggrepel: 501 unlabeled data points (too many overlaps). Consider\n#> increasing max.overlaps\n```\n:::\n\n::: {.cell-output-display}\n![](01_tidyverse_files/figure-html/unnamed-chunk-1-2.png){width=672}\n:::\n\n```{.r .cell-code}\n#Step 6\numap_kmeans_results_tbl <- kmeans_obj %>% \n  augment(stock_date_matrix_tbl) %>% \n  select(symbol, .cluster) %>% \n  left_join(umap_results_tbl) %>% \n  left_join(sp_500_index_tbl %>% select(symbol, company, sector))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Joining with `by = join_by(symbol)`\n#> Joining with `by = join_by(symbol)`\n```\n:::\n\n```{.r .cell-code}\numap_kmeans_results_tbl %>% \n  ggplot(aes(x, y, color = .cluster)) +\n  \n  # Geometries\n  geom_point(alpha = 0.5) +\n  ggrepel::geom_label_repel(aes(label = symbol), size = 2, fill = \"#282A36\") +\n  \n  # Formatting\n  scale_color_manual(values=c(\"#2d72d6\", \"#2dc6d6\", \"#2dd692\", \"#2dd692\")) + \n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: ggrepel: 496 unlabeled data points (too many overlaps). Consider\n#> increasing max.overlaps\n```\n:::\n\n::: {.cell-output-display}\n![](01_tidyverse_files/figure-html/unnamed-chunk-1-3.png){width=672}\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}